language: cpp
sudo: required
compiler:
  - clang
  - gcc
dist: trusty
os:
  - linux
  - osx

before_install:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      brew update;
      brew ls | grep -wq qt5 || brew install qt5;
      export PATH=$PATH:/usr/local/opt/qt5/bin;
      brew install cppcheck;
    fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      sudo add-apt-repository -y ppa:beineri/opt-qt58-trusty;
      sudo apt-get update;
      sudo apt-get install -y qt58base qt58connectivity qt58declarative qt58quickcontrols qt58quickcontrols2;
      sudo apt-get install -y cppcheck;
      source /opt/qt58/bin/qt58-env.sh;
    fi
  - curl http://www.lua.org/ftp/lua-5.3.3.tar.gz | tar xz
  - pushd lua-5.3.3
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      sudo make macosx install;
      export C_INCLUDE_PATH=/usr/local/include:$C_INCLUDE_PATH;
      export CPLUS_INCLUDE_PATH=/usr/local/include:$CPLUS_INCLUDE_PATH;
      export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH;
    fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      sudo make linux install;
    fi
  - popd

before_script:
  - # cppcheck --enable=all --error-exitcode=1 --quiet OpenGestureControl # Disabled for now

script:
  - pushd OpenGestureControl
  - qmake OpenGestureControl.pro
  - make
  - popd
  - pushd tests
  - qmake tests.pro
  - make
  - cp ../OpenGestureControl/browser.lua .
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      export DISPLAY=:99.0;
      sh -e /etc/init.d/xvfb start;
      sleep 3;
      ./tests;
    fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      ./tests.app/Contents/MacOS/tests;
    fi
  - for filename in `find . | egrep '\.cpp'`; do
      gcov -n -o . $filename > /dev/null;
    done

after_success:
  - curl https://codecov.io/bash -o codecov.sh
  - bash codecov.sh -g "*tests/*test*" -g "*tests/main.*"

notifications:
  slack:
    secure: jB9HvVu16xUfR0uSNkJ6N0kPaRgqC7M6iTCsQS6zXvb2wLZum86Ipj6DRy9UzeV3VVVAcxRoMrtNIusEFWDGWkpo7/wkIjz0nrTWVx/KDuc8agN9pw/AS+o3Cf19FLNGy9/F7Az9abAYc93eFWiYpXJIyre43s7l9gxDNZluJtLXe/DKlt3JzaXV1NZ7MwH+FTpD2dpcSRti5CuVhNejwuE3j3EY7yV5fRXHcs3F5woIShA5wKixKciVue5IQe5vMoH1DGuz7fdSSv8JbGINwNRJQQmDG2OGHjWnNvJbOFm/yJIpVb9LmWy15v4V4kxZBpuIYQ1QhbD4nFUzyA8dybdnrnrrc8ZIGeOjWH/KB86gCutGRfZxd0YNZI6hF1VHw385XHbXE8Aj4e2gEiXhXQpBwCx7uGEw0IrrC6h3QKqGVC/nLXBq/6fgR575fDm/3tDUBl8rnkLoA3G1v6bTRN63e/biHyfoovz+/U0uySTTvvu2ijvFfbIk4Erpt0Koqe2ABM7wIqYi0cGTk+0Isihha2pFo8JuiH5lj7x0qHq09Krt716Wwo09SzEvDBjSyl1AcHB5ksyN4rDg8pLhApZsG+m+ih+lgjZGh7tC/pPqo5FNj1PYMH6skJ572umShYhF2N4BSwKokSzv2lyeW45MNwNw6Ijy4uEz5adVdMM=
  email: false
